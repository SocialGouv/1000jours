// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`kosko generate --dev jobs/restore 1`] = `
"---
apiVersion: batch/v1
kind: Job
metadata:
  name: copy-db-0123456
  annotations:
    app.github.com/job: '5678'
    app.github.com/ref: refs/heads/mybranch
    app.github.com/repo: socialgouv/1000jours
    app.github.com/run: '1234'
    app.github.com/sha: '0123456'
    kapp.k14s.io/update-strategy: skip
  namespace: env-1000jours-mybranch-3s2aqr
spec:
  backoffLimit: 0
  template:
    metadata: {}
    spec:
      containers:
        - command:
            - sh
            - '-c'
            - >

              [ ! -z $FROM_DATABASE ] || (echo \\"No FROM_DATABASE\\"; exit 1)

              [ ! -z $TO_DATABASE ] || (echo \\"No TO_DATABASE\\"; exit 1)


              OUTFILE=\\"/tmp/out.sql\\"


              echo \\"dumping to \${OUTFILE} from \${FROM_DATABASE##*@}\\"

              pg_dump --clean --verbose --no-owner --no-acl -U postgres -f
              \${OUTFILE} --dbname \${FROM_DATABASE}


              echo \\"restoring from \${OUTFILE} to \${TO_DATABASE##*@}\\"

              cat \${OUTFILE} | psql \${TO_DATABASE}


              echo \\"Finished\\"


              exit 0
          env:
            - name: FROM_DATABASE
              valueFrom:
                secretKeyRef:
                  name: azure-pg-user-develop
                  key: DATABASE_URL
            - name: TO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: azure-pg-user-mybranch
                  key: DATABASE_URL
          envFrom: []
          image: postgres:11
          imagePullPolicy: IfNotPresent
          name: copy-db
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts: []
      restartPolicy: OnFailure
      volumes: []
  ttlSecondsAfterFinished: 86400
---
apiVersion: v1
kind: Secret
stringData:
  DATABASE_URL: >-
    postgresql://user_develop%40les1000joursdevserver.postgres.database.azure.com:password_develop@les1000joursdevserver.postgres.database.azure.com/autodevops_develop?sslmode=require
  DB_URI: >-
    postgresql://user_develop%40les1000joursdevserver.postgres.database.azure.com:password_develop@les1000joursdevserver.postgres.database.azure.com/autodevops_develop?sslmode=require
  HASURA_GRAPHQL_DATABASE_URL: >-
    postgresql://user_develop%40les1000joursdevserver.postgres.database.azure.com:password_develop@les1000joursdevserver.postgres.database.azure.com/autodevops_develop?sslmode=require
  PGDATABASE: autodevops_develop
  PGHOST: les1000joursdevserver.postgres.database.azure.com
  PGPASSWORD: password_develop
  PGRST_DB_URI: >-
    postgresql://user_develop%40les1000joursdevserver.postgres.database.azure.com:password_develop@les1000joursdevserver.postgres.database.azure.com/autodevops_develop?sslmode=require
  PGSSLMODE: require
  PGUSER: user_develop@les1000joursdevserver.postgres.database.azure.com
metadata:
  annotations:
    app.github.com/job: '5678'
    app.github.com/ref: refs/heads/mybranch
    app.github.com/repo: socialgouv/1000jours
    app.github.com/run: '1234'
    app.github.com/sha: '0123456'
  labels:
    application: 1000jours
    component: 1000jours
    owner: 1000jours
    team: 1000jours
    cert: wildcard
  name: azure-pg-user-develop
  namespace: env-1000jours-mybranch-3s2aqr
"
`;
